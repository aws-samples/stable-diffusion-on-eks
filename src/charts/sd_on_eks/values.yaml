global:
  awsRegion: us-west-2
  stackName: ""

karpenter:
  provisioner:
    labels: {}
    capacityType:
      onDemand: true
      spot: true
    instanceType:
    - "g5.xlarge"
    - "g5.2xlarge"
    extraRequirements: []
    extraTaints: []
    resourceLimits:
      nvidia.com/gpu: 100
    consolidation: true
    disruption:
      consolidateAfter: 30s
      expireAfter: Never
  nodeTemplate:
    iamRole: ""
    securityGroupSelector: {}
    subnetSelector: {}
    tags: {}
    amiFamily: Bottlerocket
    osVolume:
      volumeSize: 10Gi
      volumeType: gp3
      deleteOnTermination: true
      iops: 3000
      throughput: 125
    dataVolume:
      volumeSize: 80Gi
      volumeType: gp3
      deleteOnTermination: true
      iops: 4000
      throughput: 1000
    userData: ""
runtime:
  type: "sdwebui"
  labels: {}
  annotations: {}
  serviceAccountName: runtime-sa
  replicas: 1
  scaling:
    enabled: true
    queueLength: 10
    cooldownPeriod: 60
    maxReplicaCount: 20
    minReplicaCount: 0
    pollingInterval: 1
    scaleOnInFlight: false
    extraHPAConfig: {}
  inferenceApi:
    image:
      repository: public.ecr.aws/bingjiao/sd-on-eks/sdwebui
      tag: latest
    modelFilename: ""
    modelMountPath: /opt/ml/code/models
    commandArguments: ""
    extraEnv: {}
    imagePullPolicy: IfNotPresent
    resources:
      limits:
        nvidia.com/gpu: "1"
      requests:
        nvidia.com/gpu: "1"
        cpu: 2500m
        memory: 6Gi
  queueAgent:
    image:
      repository: public.ecr.aws/bingjiao/sd-on-eks/queue-agent
      tag: latest
    extraEnv: {}
    dynamicModel: false
    imagePullPolicy: IfNotPresent
    s3Bucket: ""
    snsTopicArn: ""
    sqsQueueUrl: ""
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
    XRay:
      enabled: true
  persistence:
    enabled: true
    existingClaim: ""
    labels: {}
    annotations: {}
    storageClass: s3-model-storage-sc
    size: 2Ti
    accessModes:
    - ReadWriteMany
